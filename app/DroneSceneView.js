"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var nativescript_ar_1 = require("nativescript-ar");
Object.assign(global, {
    SCNVector3Make: function (x, y, z) {
        return new SCNVector3({ x: x, y: y, z: z });
    }
});
var DroneSceneView = /** @class */ (function (_super) {
    __extends(DroneSceneView, _super);
    function DroneSceneView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DroneSceneView.prototype.setupDrone = function () {
        this.sceneView.scene = SCNScene.sceneNamed("Assets.scnassets/Drone.scn");
        this.helicopterNode = this.sceneView.scene.rootNode.childNodeWithNameRecursively("helicopter", false);
        this.helicopterNode.transform = SCNMatrix4Mult(this.helicopterNode.transform, SCNMatrix4MakeRotation(Math.PI / 2, 1, 0, 0));
        this.helicopterNode.position = SCNVector3Make(this.helicopterNode.position.x, this.helicopterNode.position.y, this.helicopterNode.position.z - 1);
        this.blade1Node = this.helicopterNode.childNodeWithNameRecursively("Rotor_R_2", true);
        this.blade2Node = this.helicopterNode.childNodeWithNameRecursively("Rotor_L_2", true);
        this.rotorR = this.blade1Node.childNodeWithNameRecursively("Rotor_R", true);
        this.rotorL = this.blade2Node.childNodeWithNameRecursively("Rotor_L", true);
        this.styleDrone();
        this.spinBlades();
    };
    DroneSceneView.prototype.styleDrone = function () {
        var bodyMaterial = SCNMaterial.new();
        bodyMaterial.diffuse.contents = UIColor.colorWithRedGreenBlueAlpha(63 / 255, 86 / 255, 247 / 255, 1);
        this.helicopterNode.geometry.materials = NSArray.arrayWithArray([bodyMaterial]);
        //a node might have geometry of null
        // this.sceneView.scene.rootNode.geometry.materials = NSArray.arrayWithArray([bodyMaterial]);
        var bladeMaterial = SCNMaterial.new();
        bladeMaterial.diffuse.contents = UIColor.grayColor;
        var rotorMaterial = SCNMaterial.new();
        rotorMaterial.diffuse.contents = UIColor.whiteColor;
        this.blade1Node.geometry.materials = NSArray.arrayWithArray([rotorMaterial]);
        this.blade2Node.geometry.materials = NSArray.arrayWithArray([rotorMaterial]);
        this.rotorR.geometry.materials = NSArray.arrayWithArray([bladeMaterial]);
        this.rotorL.geometry.materials = NSArray.arrayWithArray([bladeMaterial]);
    };
    DroneSceneView.prototype.spinBlades = function () {
        var rotate = SCNAction.rotateByXYZDuration(0, 0, 200, 0.5);
        var moveSequence = SCNAction.sequence(NSArray.arrayWithArray([rotate]));
        var moveLoop = SCNAction.repeatActionForever(moveSequence);
        this.rotorL.runAction(moveLoop);
        this.rotorR.runAction(moveLoop);
    };
    DroneSceneView.prototype.changeAltitude = function (value) {
        SCNTransaction.begin();
        SCNTransaction.animationDuration = 0.5;
        this.helicopterNode.position = SCNVector3Make(this.helicopterNode.position.x, value, this.helicopterNode.position.z);
        SCNTransaction.commit();
    };
    DroneSceneView.prototype.moveLeft = function () {
        SCNTransaction.begin();
        SCNTransaction.animationDuration = 0.5;
        this.helicopterNode.position = SCNVector3Make(this.helicopterNode.position.x - 0.5, this.helicopterNode.position.y, this.helicopterNode.position.z);
        this.blade2Node.runAction(SCNAction.rotateByXYZDuration(0.3, -0.1, 0, 1.5));
        this.blade1Node.runAction(SCNAction.rotateByXYZDuration(0.3, 0, 0, 1.5));
        SCNTransaction.commit();
        this.blade2Node.runAction(SCNAction.rotateByXYZDuration(-0.3, 0.1, 0, 0.25));
        this.blade1Node.runAction(SCNAction.rotateByXYZDuration(-0.3, 0, 0, 0.25));
    };
    DroneSceneView.prototype.moveRight = function () {
        SCNTransaction.begin();
        SCNTransaction.animationDuration = 0.5;
        this.helicopterNode.position = SCNVector3Make(this.helicopterNode.position.x + 0.5, this.helicopterNode.position.y, this.helicopterNode.position.z);
        this.blade2Node.runAction(SCNAction.rotateByXYZDuration(0.3, -0.1, 0, 1.5));
        this.blade1Node.runAction(SCNAction.rotateByXYZDuration(0.3, 0, 0, 1.5));
        SCNTransaction.commit();
        this.blade2Node.runAction(SCNAction.rotateByXYZDuration(-0.3, 0.1, 0, 0.25));
        this.blade1Node.runAction(SCNAction.rotateByXYZDuration(-0.3, 0, 0, 0.25));
    };
    DroneSceneView.prototype.moveForward = function () {
        SCNTransaction.begin();
        SCNTransaction.animationDuration = 0.5;
        this.helicopterNode.position = SCNVector3Make(this.helicopterNode.position.x, this.helicopterNode.position.y, this.helicopterNode.position.z - 0.5);
        this.blade2Node.runAction(SCNAction.rotateByXYZDuration(0.3, -0.1, 0, 1.5));
        this.blade1Node.runAction(SCNAction.rotateByXYZDuration(0.3, 0, 0, 1.5));
        SCNTransaction.commit();
        this.blade2Node.runAction(SCNAction.rotateByXYZDuration(-0.3, 0.1, 0, 0.25));
        this.blade1Node.runAction(SCNAction.rotateByXYZDuration(-0.3, 0, 0, 0.25));
    };
    DroneSceneView.prototype.moveBack = function () {
        SCNTransaction.begin();
        SCNTransaction.animationDuration = 0.5;
        this.helicopterNode.position = SCNVector3Make(this.helicopterNode.position.x, this.helicopterNode.position.y, this.helicopterNode.position.z + 0.5);
        this.blade2Node.runAction(SCNAction.rotateByXYZDuration(0.3, -0.1, 0, 1.5));
        this.blade1Node.runAction(SCNAction.rotateByXYZDuration(0.3, 0, 0, 1.5));
        SCNTransaction.commit();
        this.blade2Node.runAction(SCNAction.rotateByXYZDuration(-0.3, 0.1, 0, 0.25));
        this.blade1Node.runAction(SCNAction.rotateByXYZDuration(-0.3, 0, 0, 0.25));
    };
    return DroneSceneView;
}(nativescript_ar_1.AR));
exports.DroneSceneView = DroneSceneView;
//# sourceMappingURL=data:application/json;base64,